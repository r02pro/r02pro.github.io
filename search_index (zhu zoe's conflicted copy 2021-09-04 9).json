[["na.html", "2.8 Missing Values (NA)", " 2.8 Missing Values (NA) In applications, we often encounter the situation where some observations are missing in the data set. In this scenario, R uses NA to represent those observations, indicating they are not available. Let’s see the following example. a &lt;- 1:10 a[11] #&gt; [1] NA Since we define a as a vector of length 10, when we try to access the 11th element of a, it is not available, showing a value of NA. 2.8.1 NA is Contagious NA represents that the underlying value is not available. As a result, for most operations associated with NA, the results will also be NA, showing that NA is contagious. y &lt;- NA y + 3 #&gt; [1] NA y == 3 #&gt; [1] NA As you can see here, since y is NA, indicating the value of y is not available. When you try to calculate y + 3 or y == 3, the answers are clearly not available as well, hence both taking the value NA. The same thing happens when you try to do operations between an NA object and any other object. x &lt;- 3 y + x y == x How about we create another NA object and compare it with y? z &lt;- NA y == z It is again NA, which may be confusing at first. However, keep in mind that since both y and z are not available, there is no way to tell whether they are the same. 2.8.2 Functions on vectors with NA Now, let’s talk about what impact the NA values make for statistical functions. x &lt;- c(1, NA, 3, 4, NA, 2) x #&gt; [1] 1 NA 3 4 NA 2 sum(x) #&gt; [1] NA mean(x) #&gt; [1] NA sd(x) #&gt; [1] NA summary(x) #&gt; Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s #&gt; 1.00 1.75 2.50 2.50 3.25 4.00 2 As you can see, for many functions on vectors, as long as there exists one NA value, the results are often impossible to determine, hencing results in an NA value as well. Typically, you may want to ignore the NA values during the function evaluation. Fortunately, most functions on vectors provides an optional argument na.rm, which takes a logical value, indicating whether to remove NA before applying the function. Let’s see the following examples. sum(x, na.rm = TRUE) #&gt; [1] 10 mean(x, na.rm = TRUE) #&gt; [1] 2.5 sd(x, na.rm = TRUE) #&gt; [1] 1.290994 It is easy to verify that the results are what we expect to get if the NA values are removed. 2.8.3 Work with NA values When there are NA values in our vector, there is nothing to be afraid of as there are many useful tools we can use. a. find missing values b. exclude missing values c. ignore and recode missing values d. replace non-standard missing values with NA in the vector 2.8.4 Exercises "]]
