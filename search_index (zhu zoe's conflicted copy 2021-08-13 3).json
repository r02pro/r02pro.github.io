[["add-auxiliary.html", "3.9 Add Auxiliary Lines", " 3.9 Add Auxiliary Lines Having learned how to generate scatterplots, smoothline fits, and line plot, it is sometimes helpful to add auxiliary lines to existing plots to provide additional information. Let’s first review the following scatterplot between liv_area and sale_price. library(r02pro) library(tidyverse) ggplot(data = sahp) + geom_point(mapping = aes(x = liv_area, y = sale_price)) #&gt; Warning: Removed 1 rows containing missing values (geom_point). Looking at the scatterplot, it maybe helpful to add a horizontal line. To do this, you can use the geom_hline() function with argument yintercept specifying the value on the y-axis. ggplot(data = sahp) + geom_point(mapping = aes(x = liv_area, y = sale_price)) + geom_hline(yintercept = 3e5, color = &quot;red&quot;) #&gt; Warning: Removed 1 rows containing missing values (geom_point). Here, a horizontal line at 3e5 is added to the scatterplot. Similarly, you can use t In this section, we will introduce the line plot, which is very useful for visualizing trends and often used in time series. 3.9.1 An Introduction to Line Plots In the sahp dataset, it would be interesting to generate a plot showing the trend of the sale price as a function of the sold date of the house. To do this, we can use the geom_line() function. library(r02pro) library(tidyverse) ggplot(data = sahp) + geom_line(mapping = aes(x = dt_sold, y = sale_price)) The geom_line() works by first getting the location of the value pairs of dt_sold and sale_price. Then, connect the points in the order of the variable on the x axis, i.e. dt_sold in this example. To get a better view on how geom_line() works, let’s focus on the houses that were sold before 2007. sahp_2006 &lt;- sahp[format(sahp$dt_sold, &quot;%Y&quot;) &lt; 2007, ] #all houses sold before 2007 ggplot(data = sahp_2006) + geom_line(mapping = aes(x = dt_sold, y = sale_price)) Next, we add the scatterplot onto the plot using the global mappings. ggplot(data = sahp_2006, mapping = aes(x = dt_sold, y = sale_price)) + geom_line() + geom_point() 3.9.2 Aesthetics in Line Plots As expected, we can also map variables to aesthetics in line plots. ggplot(data = sahp) + geom_line(mapping = aes(x = dt_sold, y = sale_price, color = kit_qual)) Here, the observations are divided into groups according to the value of kit_qual and separate line plots are generated for each group, representing as different colors. In addition, we can also map variables to the linetype aesthetic as in the geom_smooth() function. ggplot(data = sahp) + geom_line(mapping = aes(x = dt_sold, y = sale_price, linetype = kit_qual)) In addition to mapping aesthetics, you can also set global aesthetics as before. ggplot(data = sahp) + geom_line(mapping = aes(x = dt_sold, y = sale_price ), color = &quot;blue&quot;, linetype = 3) "]]
