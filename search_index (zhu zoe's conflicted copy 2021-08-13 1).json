[["bar-charts.html", "3.7 Bar Charts via geom_bar", " 3.7 Bar Charts via geom_bar In this section, we will introduce a new kind of plot called bar chart, which is one of the most popular plots for visualizing the distribution of a discrete variable. library(r02pro) library(tidyverse) ggplot(data = sahp) + geom_point(mapping = aes(x = liv_area, y = sale_price)) + geom_smooth(mapping = aes(x = liv_area, y = sale_price)) You may notice that the arguments inside geom_point() and geom_smooth() are identical. Now, thinking about if we want to generate another plot by replacing the liv_area with lot_area (the size of lot area), both instances of liv_area need to be changed to lot_area, which is a bit cumbersome. It turns out we can use the so-called global mapping to simplify the code. Correspondingly, we call a mapping inside a specific geom local mapping. To use the global mapping, we move the mapping argument from the geoms into the ggplot() function. ggplot(data = sahp, mapping = aes(x = liv_area, y = sale_price)) + geom_point() + geom_smooth() We can also map variables to aesthetics in the global mapping. The global aesthetic mapping will be inherited in all geoms used. ggplot(data = sahp, mapping = aes(x = lot_area, y = sale_price, color = kit_qual)) + geom_point() + geom_smooth() Clearly, the use of global mapping greatly simplify our code as we would need to repeat the same mapping argument in both geoms. In addition to using the same mapping in each geom as the global mapping, we can also extend or overwrite the global mapping in each geom. 3.7.1 Extend Global Aesthetic Mappings In addition to the global aesthetic mappings, you can add additional mappings in each geom. ggplot(data = sahp, mapping = aes(x = lot_area, y = sale_price, color = kit_qual)) + geom_point(mapping = aes(shape = gar_car &gt; 1)) + geom_smooth(mapping = aes(linetype = kit_qual)) Here, both geom_point() and geom_smooth() will first inherit the global mappings, then add the shape and linetype aesthetics, respectively. 3.7.2 Overwrite Global Aesthetic Mappings When you add the same aesthetic mapping in the local geom as one of the global mappings, the corresponding local aesthetic mapping will be overwritten. ggplot(data = sahp, mapping = aes(x = lot_area, y = sale_price, color = kit_qual)) + geom_point(mapping = aes(color = gar_car &gt; 1)) + geom_smooth(mapping = aes(color = gar_car &gt; 1)) Here, you can see that the color aesthetic mapping corresponding to the logical variable gar_car &gt; 1. It is worth to note the difference between global aesthetics (introduced in Section 3.3) and the global aesthetic mappings introduced here. The global aesthetics set the aesthetic for all points/lines on the graph while the global aesthetic mapping represents the mapping which will be passed to all geoms. Although we can set global aesthetic mappings, it is impossible to set global global aesthetics. Letâ€™s try to set all points and lines to be red. ggplot(data = sahp, mapping = aes(x = lot_area, y = sale_price), color = &quot;red&quot;) + geom_point() + geom_smooth() As you can see the color = \"red\" argument was ignored during the plotting process. To achieve this, you need to use color = \"red\" as global aesthetics for both geoms as below. ggplot(data = sahp, mapping = aes(x = lot_area, y = sale_price)) + geom_point(color = &quot;red&quot;) + geom_smooth(color = &quot;red&quot;) 3.7.3 Mix As you may have expected, it is straightforward to mix global aesthetic mappings, local aesthetic mappings, and global aesthetics for each geom. ggplot(data = sahp, mapping = aes(x = liv_area, y = sale_price, color = kit_qual)) + geom_point(mapping = aes(shape = house_style == &quot;2Story&quot;), size = 2) + geom_smooth(linetype = 2, se = FALSE) "]]
