[["rmd-text-formating.html", "10.2 Text Formatting in R Markdown", " 10.2 Text Formatting in R Markdown Having learned the YAML Header and R Code Chunks in Section 10.1, we will introduce how to format text in R Markdown document, which is crucial in writing a report. In particular, R Markdown follows the syntax of Pandoc’s Markdown, a set of markup annotations for plain text files. Pandoc (https://pandoc.org/) is a universal document converter that converts documents from one markupformat into another. When you knit the .Rmd file, Pandoc transforms the marked up text into formatted text in the specified file format. 10.2.1 Text Formats R Markdown provides an easy way to generate formatted text. Let’s discuss a couple of commonly used ones. a. different header levels You may use different numbers of # before the text to indicate different header levels (with more #s indicating lower levels and smaller font). # Header1 ## Header2 ### Header3 #### Header4 ##### Header5 ###### Header6 b. change the text into italic type To make text into italic type, you can simply use a pair of * around the text with no space. For example, *italics* will generate italics in the document. c. change the text into bold type To make text into bold type, you can simply use a pair of ** around the text with no space. For example, **bold** will generate bold in the document. d. highlight a piece of code To highlight code in a paragraph, you can use a pair of ` around the code with no space. For example, `code` will generate code in the document. e. insert hyperlinks To insert a hyperlink, you can use the format [link](address). For example, [r02pro](https://r02pro.github.io/) will generate the text r02pro with hyperlink to this book. f. write latex equations When writing documents that contain math symbols or equations, you can use latex equations directly in an R Markdown file, just like writing a .tex file. For example, you can use $\\sum_{i=1}^{10} i = 55$ to get \\(\\sum_{i=1}^{10} i= 55\\). You can also use a pair of $$ to write in display math mode. Say $$\\sum_{i=1}^{10} i = 55$$ will generate \\[\\sum_{i=1}^{10} i = 55\\] Please see the following example which has all components introduced here. # H1 *This is an example.* ## H2 I **learned** to use `a &lt;- rnorm(1)` to generating normal distributed random variable in [r02pro](https://r02pro.github.io/). ### H3 I learned how to sum up numbers when I was young. For example, $$\\sum_{i=1}^{10} i = 55$$ 10.2.2 Lists and tables There are two kinds of lists in R Markdown, unordered lists and ordered lists. To create an unordered list, you can use the symobol *, +, or - at the beginning of the line with a space between the symbol and the text. To create higher order lists, you just need to add extra space at the beginning of the line. * Item 1 * Item 2 + Item 2a - Item 2a.a - Item 2a.b + Item 2b * Item 3 + Item 3a Item 1 Item 2 Item 2a Item 2a.a Item 2a.b Item 2b Item 3 Item 3a To create an ordered list, you can use numbers followed by the contents with a space in between. Of course, you can mix the unordered list inside. 1. Item 1 2. Item 2 + Item 2a - Item 2a.a - Item 2a.b + Item 2b 3. Item 3 + Item 3a Item 1 Item 2 Item 2a Item 2a.a Item 2a.b Item 2b Item 3 Item 3a In addition to lists, you can easily create tables using R Markdown using the kable() function in the knitr package. ```{r echo = FALSE, results = TRUE} Code &lt;- c(&quot;`dnorm(x, mean, sd)`&quot;,&quot;`pnorm(q, mean, sd)`&quot;,&quot;`qnorm(p, mean, sd)`&quot;,&quot;`rnorm(n, mean, sd)`&quot;) Name &lt;- c(&quot;probability density function&quot;, &quot;cumulative distribution function&quot;, &quot;quantile function&quot;, &quot;random number generator&quot;) d &lt;- data.frame(Code, Name) knitr::kable(d) ``` Code Name dnorm(x, mean, sd) probability density function pnorm(q, mean, sd) cumulative distribution function qnorm(p, mean, sd) quantile function rnorm(n, mean, sd) random number generator 10.2.3 Insert citations and manage bibliographies R Markdown provides us the capability to add bibliography and manage citations with ease, similar to writing a LaTex document. To add citations, you first need to add the bibliography filed in the YAML head. If your references are in the file “references.bib,” you can set the bibliography file as follows. --- output: html_document bibliography: references.bib --- The .bib file is a plain-text file that consists of bibliography entries like the following: @book{r02pro, title = {R Programming: From Zero to Pro}, author = {Yang Feng and Jianan Zhu}, organization = {New York University}, address = {New York, NY}, year = {2021}, url = {https://r02pro.github.io/}, } Then, each bibtex items can be cited directly within the documentation using the syntax @key, where key is the citation key in the first line of the entry, e.g., @r02pro will show as Feng and Zhu (2021) in the document. To put citations in parentheses, use [@key]. To cite more than one items, separate the keys by semicolons, e.g., [@key-a; @key-b; @key-c]. To suppress the author name, add a minus sign before @, e.g., [-@r02pro]. To learn more about citations and bibliography, you can read the excellent book by Xie, Dervieux, and Riederer (2020). References "]]
